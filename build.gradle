apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'distribution'

buildscript {
    ext.kotlin_version = '1.2.41'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    jcenter()
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile group: 'com.h2database', name: 'h2', version: '1.3.148'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile 'com.google.guava:guava:24.0-jre'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testCompile("org.junit.jupiter:junit-jupiter-api:5.1.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.1.0")
    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.1.0'
}


task migrate(type: JavaExec, dependsOn: 'classes') {
    main = 'com.relexsolutions.assignment.migrator.Main'
    args = ['migrate']
    classpath = sourceSets.main.runtimeClasspath
}

task show_tables(type: JavaExec, dependsOn: 'classes') {
    main = 'com.relexsolutions.assignment.migrator.Main'
    args = ['show_tables']
    classpath = sourceSets.main.runtimeClasspath
}

// run this e.g. with `gradle generate -Pmigration=foo`
task generate(type: JavaExec, dependsOn: 'classes') {
    main = 'com.relexsolutions.assignment.migrator.Main'
    args = ['generate', "migration"]
    classpath = sourceSets.main.runtimeClasspath
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

distributions {
    main {
        contents {
            from { '.' }
            excludes = ['.*', 'out', 'build', '*.iml', 'dbs/*']
        }
    }
}